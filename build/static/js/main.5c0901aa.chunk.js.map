{"version":3,"sources":["App.js","logo.svg","reportWebVitals.js","index.js"],"names":["myAlgoWallet","Pipeline","init","main","mynet","tealNames","tealContracts","chat","a","i","length","name","fetch","data","text","program","data2","clearProgram","base64ToArrayBuffer","newData","Buffer","from","console","log","addTableRow","document","getElementById","insertRow","insertCell","innerHTML","txid","url2","json","data3","transaction","note","App","props","fetchBalance","addr","balance","then","setState","setNet","event","target","value","net","handleConnect","connect","myAddress","setInterval","state","switchConnector","pipeConnector","deploy","deployTeal","appAddress","algosdk","getApplicationAddress","delete","deleteApp","txID","optIn","appId","parseInt","args","push","changePic","pictx","appCall","fund","famt","appCallWithTxn","deposit","depositAmt","modifyTeal","newGoal","searchTerms","replacements","replaceAll","goal","alert","check","readGlobal","post","myMessage","readGlobalState","keyIndex","thisKey","window","atob","key","myPicTxid","bytes","handleFetch","toDataURL","readLocalState","appIndex","url","appData","appJSON","account","forEach","id","entry","contribution","uint","share","withdrawn","startRefresh","fetchNote","drawData","canvas","ctx","getContext","clearRect","width","height","counter","addAlpha","pixel","r","g","b","rgbFrom8","pic","Uint8ClampedArray","imgData","ImageData","renderer","createElement","putImageData","drawImage","level","fundAmount","depositAmount","myProfits","messages","getContracts","loadingSpin","this","loading","align","className","href","class","onClick","onChange","src","logo","alt","role","placeholder","type","rows","spellCheck","style","display","comments","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5c0901aa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Pipeline from '@pipeline-ui-2/pipeline'; //change to import Pipeline from 'Pipeline for realtime editing Pipeline index.js, and dependency to: \"Pipeline\": \"file:..\",\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./bootstrap.css\";\n\nimport algosdk from 'algosdk'\n\nconst myAlgoWallet = Pipeline.init();\n\nPipeline.main = false;\n\nvar ready = false\n\nvar canvasId = 2\n\nvar mynet = (Pipeline.main) ? \"MainNet\" : \"TestNet\";\n\nconst tealNames = [\"chat\"]\n\nconst tealContracts = {\n  chat: {},\n}\n\nvar refresh = false\n\nasync function getContracts() {\n  for (let i = 0; i < tealNames.length; i++) {\n    let name = tealNames[i]\n    let data = await fetch(\"teal/\" + name + \".txt\")\n    tealContracts[name].program = await data.text()\n    let data2 = await fetch(\"teal/\" + name + \" clear.txt\")\n    tealContracts[name].clearProgram = await data2.text()\n  }\n}\n\nfunction base64ToArrayBuffer(data) {\n  let newData = Buffer.from(data, 'base64');\n  console.log(newData);\n  return newData;\n}\n\nfunction addAlpha(data) {\n  let newData = [];\n  let counter = -1\n  for (var i = 0; i < data.length; i++) {\n    if (counter < 2) { newData.push(data[i]); counter++; }\n    else { newData.push(255); newData.push(data[i]); counter = 0; }\n  }\n  newData.push(255);\n  return newData;\n\n}\n\nfunction addTableRow(data){\n  let table = document.getElementById(\"chatLog\");\n  let row = table.insertRow(0);\n  let cell1 = row.insertCell(0);\n  cell1.innerHTML = data;\n  }\n\nfunction rgbFrom8(data) {\n  let newData = [];\n  for (var i = 0; i < data.length; i++) {\n    let pixel = data[i];\n    let r = (pixel >> 5) * 32;\n    let g = ((pixel & 28) >> 2) * 32;\n    let b = (pixel & 3) * 64;\n    newData.push(r);\n    newData.push(g);\n    newData.push(b);\n  }\n  return newData;\n}\n\nasync function fetchNote(txid) {\n\n  let indexerURL = 'https://algoindexer.algoexplorerapi.io/v2/transactions/'\n\n  /* if (Pipeline.main == true) {\n    indexerURL = indexerURL + 'algoindexer.algoexplorerapi.io/v2/transactions/'\n  }\n  else {\n    indexerURL = indexerURL + \"algoindexer.testnet.algoexplorerapi.io/v2/transactions/\"\n  } */\n\n  let url2 = indexerURL + txid\n  try {\n    let data = await fetch(url2)\n    let data2 = await data.json()\n    let data3 = data2.transaction.note\n    return data3\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      net: mynet,\n      txID: \"\",\n      myAddress: \"\",\n      balance: 0,\n      appAddress: \"\",\n      goal: 0,\n      level: 0,\n      fundAmount: \"Not fetched yet...\",\n      share: 0,\n      depositAmount: 0,\n      myProfits: 0,\n      withdrawn: 0,\n      contribution: 0,\n      data: \"\",\n      messages: []\n    }\n  }\n\n  componentDidMount() {\n    getContracts()\n  }\n\n  fetchBalance = (addr) => {\n    Pipeline.balance(addr).then(\n      data => {\n        this.setState({ balance: data });\n      }\n    );\n  }\n\n  setNet = (event) => {\n    if (event.target.value === \"TestNet\") {\n      Pipeline.main = false\n      this.setState({ net: \"TestNet\" })\n    }\n    else {\n      Pipeline.main = true\n      this.setState({ net: \"MainNet\" })\n    }\n\n  }\n\n  handleConnect = () => {\n    Pipeline.connect(myAlgoWallet).then(\n      data => {\n        this.setState({ myAddress: data });\n        setInterval(() => this.fetchBalance(this.state.myAddress), 5000)\n      }\n    );\n  }\n\n  switchConnector = (event) => {\n    Pipeline.pipeConnector = event.target.value\n    console.log(Pipeline.pipeConnector)\n  }\n\n  deploy = async () => {\n\n    let name = \"chat\"\n\n    Pipeline.deployTeal(tealContracts[name].program, tealContracts[name].clearProgram, [3, 3, 0, 0], [\"create\"]).then(data => {\n      document.getElementById(\"appid\").value = data;\n      this.setState({ appAddress: algosdk.getApplicationAddress(data) });\n    })\n  }\n\n  delete = async () => {\n    Pipeline.deleteApp(document.getElementById(\"appid\").value).then(data => {\n      this.setState({ txID: data })\n    })\n  }\n\n  optIn = async () => {\n    let appId = document.getElementById(\"appid\").value\n    this.state.appAddress = algosdk.getApplicationAddress(parseInt(appId))\n    let args = []\n    args.push(\"register\")\n    Pipeline.optIn(appId, args).then(data => {\n      this.setState({ txID: data });\n\n    })\n  }\n\n  changePic = async () => {\n\n    let appId = document.getElementById(\"appid\").value\n\n    let appAddress = algosdk.getApplicationAddress(parseInt(appId))\n    let pictx = document.getElementById(\"picAddress\").value\n    console.log(pictx)\n\n    Pipeline.appCall(appId, [\"pic\", pictx]).then(data => { this.setState({ txID: data }) })\n  }\n\n  fund = async () => {\n    let appId = document.getElementById(\"appid\").value\n    let appAddress = algosdk.getApplicationAddress(parseInt(appId))\n    let famt = parseInt(document.getElementById(\"fundAmt\").value)\n    Pipeline.appCallWithTxn(appId, [\"fund\"], appAddress, famt, \"funding\", 0, [appAddress]).then(\n      data => { this.setState({ txID: data }) })\n  }\n\n  deposit = async () => {\n    let appId = document.getElementById(\"appid\").value\n    let appAddress = algosdk.getApplicationAddress(parseInt(appId))\n    let depositAmt = parseInt(document.getElementById(\"depAmt\").value)\n    Pipeline.appCallWithTxn(appId, [\"deposit\"], appAddress, depositAmt, \"depositing\", 0, [appAddress]).then(\n      data => { this.setState({ txID: data }) })\n  }\n\n  modifyTeal = () => {\n    let newGoal = document.getElementById(\"newGoal\").value\n    let search1 = \"BKGZZRBHXOBCD5HMITYZ5CI3V3LS6OMLUT2I7C7QIRU6VA3B2BXUFRN2BE\";\n    let search2 = \"3000000\"\n    let searchTerms = [search1, search2]\n    let replacements = [document.getElementById(\"recipient\").value, newGoal]\n\n    for (let i = 0; i < replacements.length; i++) {\n      tealContracts[\"daoDeposit\"].program = tealContracts[\"daoDeposit\"].program.replaceAll(searchTerms[i], replacements[i])\n      console.log(tealContracts[\"daoDeposit\"].program)\n    }\n    this.setState({ goal: newGoal })\n    alert(\"Contract modified! Check console log to preview\")\n  }\n\n  check = () => {\n    this.readGlobal()\n  }\n\n  post = async () => {\n\n    let appId = document.getElementById(\"appid\").value\n\n    let appAddress = algosdk.getApplicationAddress(parseInt(appId))\n    let myMessage = document.getElementById(\"postMessage\").value\n\n    Pipeline.appCall(appId, [\"chat\", myMessage]).then(data => { this.setState({ txID: data }) })\n  }\n\n  readGlobal = async () => {\n    Pipeline.readGlobalState(document.getElementById(\"appid\").value).then(\n      data => {\n        console.log(\"App Data\")\n        console.log(data)\n        let keyIndex = \"\"\n        for (let i = 0; i < data.length; i++) {\n          let thisKey = window.atob(data[i].key)\n          if (thisKey === \"pic\") {\n            keyIndex = i;\n            let myPicTxid = data[keyIndex].value.bytes\n            this.handleFetch(window.atob(myPicTxid))\n          }\n          else {\n            if (thisKey === \"chat\") {\n              keyIndex = i;\n              let myMessage = window.atob(data[keyIndex].value.bytes)\n              console.log(myMessage)\n              canvasId++\n              let canvas = document.getElementById(\"canvas2\")\n              let url = canvas.toDataURL(\"image/png\");\n              addTableRow('<td><img src=\"' + url + '\"></img></td><td>' + myMessage + \"</td>\")\n            }\n          }\n        }\n      })\n  }\n\n  readLocalState = async (net, addr, appIndex) => {\n\n    try {\n\n      let url = \"\"\n\n      if (!net) {\n        url = \"https://algoindexer.testnet.algoexplorerapi.io\"\n      }\n      else {\n        url = \"https://algoindexer.algoexplorerapi.io\"\n      }\n\n      let appData = await fetch(url + '/v2/accounts/' + addr)\n      let appJSON = await appData.json()\n      let AppStates = await appJSON.account[\"apps-local-state\"]\n      AppStates.forEach(state => {\n        if (state.id === parseInt(appIndex)) {\n          let keyvalues = state[\"key-value\"]\n          keyvalues.forEach(entry => {\n            if (entry.key === \"YW10\") {\n              let contribution = entry.value.uint\n              this.setState({ share: parseInt((contribution / this.state.goal) * 100) || 0 })\n            }\n            if (entry.key === \"d2l0aGRyYXdu\") {\n              let withdrawn = entry.value.uint\n              this.setState({ withdrawn: withdrawn || 0 })\n            }\n          })\n        }\n      })\n    }\n    catch (error) { console.log(error) }\n  }\n\n  startRefresh = () => {\n    this.check()\n    //if(!refresh){setInterval(() => this.check(),5000)}\n    //refresh = true\n  }\n\n  handleFetch = (txid) => {\n    fetchNote(txid).then(data =>\n      this.setState({ data: base64ToArrayBuffer(data) }, () =>\n        this.drawData()));\n       \n  }\n\n  drawData = () => {\n    var canvas = document.getElementById('canvas2');\n    var ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const newData = addAlpha(rgbFrom8(this.state.data));\n    var pic = new Uint8ClampedArray(newData);\n    var imgData = new ImageData(pic, 30, 30);\n    var renderer = document.createElement('canvas');\n    renderer.getContext('2d').putImageData(imgData, 0, 0);\n    ctx.drawImage(renderer, 0, 0, 300, 150);\n  }\n\n  render() {\n    const loadingSpin = this.state.loading ? \"App-logo Spin\" : \"App-logo\";\n    return (\n      <div align=\"center\">\n        <nav className=\"py-2 bg-light border-bottom\">\n    <div className=\"container d-flex flex-wrap\">\n      <ul className=\"nav me-auto\">\n        <li className=\"nav-item\"><a href=\"#\" class=\"nav-link link-dark px-2 active\" aria-current=\"page\">Home</a></li>\n        <li className=\"nav-item\"><a href=\"#\" class=\"nav-link link-dark px-2\">Features</a></li>\n        <li className=\"nav-item\"><a href=\"#\" class=\"nav-link link-dark px-2\">Pricing</a></li>\n        <li className=\"nav-item\"><a href=\"#\" class=\"nav-link link-dark px-2\">FAQs</a></li>\n        <li className=\"nav-item\"><a href=\"#\" class=\"nav-link link-dark px-2\">About</a></li>\n      </ul>\n      <ul className=\"nav\">\n        <li className=\"nav-item\"><a href=\"#\" class=\"nav-link link-dark px-2\">Login</a></li>\n        <li className=\"nav-item\"><a href=\"#\" class=\"nav-link link-dark px-2\">Sign up</a></li>\n      </ul>\n    </div>\n  </nav>\n  <header className=\"py-3 mb-4 border-bottom\">\n    <div className=\"container d-flex flex-wrap justify-content-center\">\n      <a href=\"/\" class=\"d-flex align-items-center mb-3 mb-lg-0 me-lg-auto text-dark text-decoration-none\">\n      <p>{\"Connected Address: \" + this.state.myAddress}</p>\n      </a>\n      <form className=\"col-12 col-lg-auto mb-3 mb-lg-0\">\n      \n              <p>{\"Balance: \" + this.state.balance}</p>\n      </form>\n    </div>\n\n        <select className=\"form-select\" onClick={this.setNet}>\n                <option>TestNet</option>\n                <option>MainNet</option>\n              </select>\n              \n              <select className=\"form-select\" onChange={this.switchConnector}>\n                <option>myAlgoWallet</option>\n                <option>WalletConnect</option>\n                <option>AlgoSigner</option>\n              </select>\n\n              <button className=\"btn btn-sm btn-bd-light mb-2 mb-md-0\" onClick={this.handleConnect}>Click to Connect</button>\n</header>\n<h2 className=\"px-2 badge bg-warning\">{this.state.net}</h2>\n        <div className=\"App container bg-light shadow\">\n        <header className=\"App-header\">\n          <img src={logo} className={loadingSpin} alt=\"logo\" />\n          <h1 className=\"App-title\">\n            Algo Chat\n            <span className=\"px-2\" role=\"img\" aria-label=\"Chat\">\n              💬\n            </span>\n          </h1>\n          <p>\n            Brought to you by{\" \"}\n            <a className=\"text-light\" href=\"https://headline-inc.com\">\n              HEADLINE\n            </a>\n          </p>\n        </header>\n\n        <div className=\"row\">\n          <div className=\"col-4  pt-3 border-right\">\n            <h6>Say something about Algorand</h6>\n            <div className=\"comment-form\"  />\n            <div ><div className=\"form-group\"><input className=\"form-control\" placeholder=\"😎 Your Name\" name=\"name\" type=\"text\" /></div><div className=\"form-group\"><textarea className=\"form-control\" placeholder=\"🤬 Your Comment\" name=\"message\" rows=\"5\" spellCheck=\"false\" type=\"text\" id=\"postMessage\"></textarea></div><div className=\"alert alert-danger\" style={{ display: \"none\" }}>Something went wrong while submitting form.</div><div className=\"form-group\">         \n                <button className=\"btn btn-primary form-group\" onClick={this.post}>Comment ➤</button></div></div>\n          </div>\n          <div className=\"col-8  pt-3 bg-white\">\n            <div className=\"comment-list\"\n              loading={this.state.loading}\n              comments={this.state.comments}\n            />\n<div className=\"comment-list\"><h5 className=\"text-muted mb-4\"><span className=\"badge badge-success\">0</span> Comment</h5><div className=\"alert text-center alert-info\">Be the first to comment</div> <div><table className=\"media-body p-2 shadow-sm rounded bg-light border rounded\" id=\"chatLog\" style={{ display: \"none\" }}></table></div></div></div><footer class=\"App-footer\"><button className=\"btn btn-bd-light\" onClick={this.startRefresh}>Refresh</button><canvas id=\"canvas2\" height=\"30px\" width=\"30px\"></canvas>               \n<div>{\"Transaction ID: \" + this.state.txID}</div>\n                </footer></div>\n          </div>\n          <div class=\"App container \">\n          <input className=\"form-control\" type=\"text\" id=\"picAddress\" placeholder=\"txid of pic\"/>\n<div className=\"bd-example\">\n        <table className=\"table\" width=\"100%\">\n        <td>\n\n                \n              </td>\n          <tbody>\n            <tr>\n            <td width=\"50%\">\n              <h1>ACTIONS</h1>\n              <button className=\"btn btn-sm btn-bd-light mb-2 mb-md-0\" onClick={this.deploy}>Deploy Contract</button>\n              <button className=\"btn btn-sm btn-bd-light mb-2 mb-md-0\" onClick={this.optIn}>Opt In</button>\n              <input className=\"form-control ds-input\" placeholder=\"App Id\" id=\"appid\" type=\"number\"></input>\n              </td>\n              <td width=\"50%\">\n\n              <br></br>\n\n              <p>{\"Application Address: \" + this.state.appAddress}</p>\n              <br></br><br></br>\n              <button className=\"btn btn-danger\" onClick={this.delete}>Delete App</button>\n              <h3>Change Profile Pic</h3>\n              <input className=\"form-control ds-input\" type=\"text\" id=\"picAddress\" placeholder=\"txid of pic\"></input>\n              <button className=\"btn btn-sm btn-bd-light mb-2 mb-md-0\" onClick={this.changePic}>Fuse</button>\n            </td>\n</tr>\n          </tbody>\n        </table>\n        </div>\n        </div>\n      </div >\n\n    );\n  }\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.34786464.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}